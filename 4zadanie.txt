# Часть 1

# Задача 1  

const fs = require('fs');

function reverseText(filename) {
    fs.readFile(filename, 'utf8', (err, data) => {
        if (err) {
            console.error('Ошибка чтения файла:', err);
            return;
        }

        const reversedText = data.split('').reverse().join('');
        
        fs.writeFile(filename, reversedText, 'utf8', err => {
            if (err) {
                console.error('Ошибка записи в файл:', err);
                return;
            }
            console.log('Текст успешно записан в обратном порядке в файл:', filename);
        });
    });
}

const filename = 'example.txt'; 
reverseText(filename);


# Задача 2

const http = require('http');
const fs = require('fs');

const PORT = 3000;
const filename = 'example.txt';

const server = http.createServer((req, res) => {
    if (req.method === 'GET' && req.url === '/') {
        fs.readFile(filename, 'utf8', (err, data) => {
            if (err) {
                res.writeHead(500, { 'Content-Type': 'text/plain' });
                res.end('Ошибка чтения файла');
            } else {
                res.writeHead(200, { 'Content-Type': 'text/plain' });
                res.end(data);
            }
        });
    } else if (req.method === 'POST' && req.url === '/') {
        let body = '';
        req.on('data', chunk => {
            body += chunk.toString();
        });
        req.on('end', () => {
            fs.appendFile(filename, body, 'utf8', err => {
                if (err) {
                    res.writeHead(500, { 'Content-Type': 'text/plain' });
                    res.end('Ошибка записи в файл');
                } else {
                    res.writeHead(200, { 'Content-Type': 'text/plain' });
                    res.end('Данные успешно добавлены в файл');
                }
            });
        });
    } else {
        res.writeHead(404, { 'Content-Type': 'text/plain' });
        res.end('Страница не найдена');
    }
});

server.listen(PORT, () => {
    console.log(`Сервер запущен на порту ${PORT}`);
});



# Часть 2 

const _ = require('lodash');

const users = [
  { user: 'fred',   age: 48 },
  { user: 'barney', age: 36 },
  { user: 'fred',   age: 40 },
  { user: 'barney', age: 34 }
];

const sortedUsers = _.sortBy(users, 'age');
console.log(sortedUsers);



